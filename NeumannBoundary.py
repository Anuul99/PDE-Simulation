# -*- coding: utf-8 -*-
"""Untitled4.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1erqkCT8uaX3ljc65yTe9taxoU4-VGzhU
"""

!pip install ffmpeg

from IPython.display import HTML
from base64 import b64encode

def play(filename):
    html = ''
    video = open(filename,'rb').read()
    src = 'data:video/mp4;base64,' + b64encode(video).decode()
    html += '<video width=1000 controls autoplay loop><source src="%s" type="video/mp4"></video>' % src 
    return HTML(html)

!rm *.jpg

import numpy as np
import matplotlib.pyplot as plt

d = 0.1
alpha = 0.7
dx = 0.1
len_x = 10.0 #
len_y = 10.0 #
dt = d*(dx**2)/alpha
end_time = 3.0
x = np.arange(0.0, len_x+dx, dx)
y = np.arange(0.0, len_y+dx, dx)
X, Y = np.meshgrid(x,y)
T = np.zeros_like(X)
G = 0.0
T[25:-70,45:-50] = 10.0 #
T[-70:25,45:-50] = 10.0 #
T[0,:] = T[0,:] + d*(T[1,:]-4.0*T[0,:]+T[1,:]-2.0*dx*G+np.roll(T[0,:],-1,axis=0)+np.roll(T[0,:],1,axis=0))
plt.figure(figsize=(10,10)) #
icounter = -1
for it in np.arange(0.0, end_time+dt, dt):
    icounter = icounter + 1
    if np.mod(icounter,10)==0:
        ax = plt.axes(projection='3d')
        p = ax.scatter(X,Y,T,c=T,cmap='rainbow',vmin=0.0,vmax=5.0)
        ax.set_xlabel('X')
        ax.set_ylabel('Y')
        ax.set_zlim([0.0,10.0])
        plt.colorbar(p)
        plt.title('Time=%.6f'%(it))
        plt.savefig('%06.6d.jpg'%(icounter))
        plt.cla()
        plt.clf()
    T[1:-1,:] = T[1:-1,:] + d*(np.roll(T[1:-1,:],-1,axis=1)+np.roll(T[1:-1,:],1,axis=1)+T[2:,:]+T[0:-2,:]-4.0*T[1:-1,:])
    T[0,:] = T[0,:] + d*(T[1,:]-4.0*T[0,:]+T[1,:]-2.0*dx*G+np.roll(T[0,:],-1,axis=0)+np.roll(T[0,:],1,axis=0))

!rm *.mp4
!ffmpeg -r 3 -pattern_type glob -i '/kaggle/working/*.jpg' -vf "scale=trunc(iw/2)*2:trunc(ih/2)*2" -vcodec libx264 -pix_fmt yuv420p test.mp4

play('/kaggle/working/test.mp4')